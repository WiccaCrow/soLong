SoLong

И спасибо за рыбу!

Описание: Этот проект представляет собой очень маленькую 2D-игру. Он создан, чтобы заставить вас работать с текстурами, спрайтами. И некоторые очень простые элементы игрового процесса.
Версия: 1
_____________________________________________________________________
СОДЕРЖАНИЕ

I    Предисловие .....................................................   2
II   цели  ...........................................................   4
III  Общие инструкции  ...............................................   5
IV   Обязательная часть - so long ....................................   6
V    Бонусная часть ..................................................   8
VI   Примеры .........................................................   9

_____________________________________________________________________
Глава I

Предисловие

Быть разработчиком - отличное средство для создания собственной игры.
Но для хорошей игры нужны хорошие активы.
для 2D-игр следует искать плитки, наборы плиток, спрайты и листы спрайтов. К счастью, некоторые талантливые художники готовы делиться своими работами на таких платформах, как itch.io

Что бы вы ни делали, старайтесь уважать работы других.
_____________________________________________________________________
Глава II.

Цели

Цели этого проекта аналогичны целям первого года: строгость, использование C, использование базовых алгоритмов, исследование информации и т. д.
Как проект графического дизайна, это позволит вам улучшить свои навыки в следующих областях: окна, цвета, события, текстуры и т. д.
_____________________________________________________________________

Глава III.

Общие инструкции

• Ваш проект должен быть написан в соответствии с Нормой. Если у вас есть бонусные файлы / функции, они включаются в проверку нормы, и вы получите 0, если внутри есть ошибка нормы.

• Ваши функции не должны завершаться неожиданно (ошибка сегментации, ошибка шины, двойное освобождение и т. Д.), За исключением неопределенного поведения. Если это произойдет, ваш проект будет считаться нефункциональным и получит 0 во время оценки.

• При необходимости все пространство памяти, выделенное кучей, должно быть должным образом освобождено. Утечки недопустимы.

• Если субъект требует этого, вы должны отправить Makefile, который скомпилирует ваши исходные файлы в требуемый вывод с флагами -Wall, -Wextra и -Werror, используйте cc, и ваш Makefile не должен повторно связываться.

• Ваш Makefile должен содержать как минимум правила $ (NAME), all, clean, fclean и re.

• Чтобы превратить бонусы в свой проект, вы должны включить бонус правила в свой Makefile, который добавит все различные заголовки, библиотеки или функции, запрещенные в основной части проекта. Бонусы должны быть в другом файле _bonus. {C / h}. Оценка обязательной и бонусной части проводится отдельно.

• Если ваш проект позволяет вам использовать ваш libft, вы должны скопировать его исходный код и связанный с ним Makefile в папку libft с соответствующим Makefile. Makefile вашего проекта должен скомпилировать библиотеку, используя свой Makefile, а затем скомпилировать проект.

• Мы рекомендуем вам создавать программы тестирования для вашего проекта, даже если эту работу не нужно будет отправлять и оценивать. Это даст вам возможность легко проверить свою работу и работу коллег. Вы найдете эти тесты особенно полезными во время защиты. Действительно, во время защиты вы можете использовать свои тесты и / или тесты партнера, которого вы оцениваете.

• Отправьте свою работу в назначенный репозиторий git. Оцениваться будет только работа в репозитории git. Если Deepthought назначен для оценки вашей работы, это будет сделано после ваших оценок коллег. Если во время выставления оценок Deepthought в каком-либо разделе вашей работы произойдет ошибка, оценка будет остановлена.


_____________________________________________________________________
Глава IV.

Обязательная часть - so long

_________________________________________________________
| Название программы | so_long                          |
|____________________|__________________________________|
| Файлы для передачи | Все ваши файлы                   |
|____________________|__________________________________|
| Makefile           | all, clean, fclean, re, bonus    |
|____________________|__________________________________|
| Аргументы          | карта в формате * .ber           |
|____________________|__________________________________|
| Внешние функции    | • open, close, read, write,      |
|                    |   printf, malloc, free, perror,  |
|                    |   strerror, exit                 |
|                    | • All functions of the MinilibX  |
|____________________|__________________________________|
| Libft разрешено ли | да                               |
|____________________|__________________________________|
|   Описание         | Вы должны создать небольшую      |
|                    | 2D-игру, в которой дельфин       | 
|                    | сбегает с земли после того,      |    
|                    | как съел немного рыбы.           |    
|                    | Или любой герой собирает         |       
|                    | какие-либо ценности перед тем,   |             
|                    | как покинуть место.              | 
|_______________________________________________________|

Ограничения следующие:

• Вы должны использовать miniLibX. Либо версия, доступная в операционной системе, либо из ее исходников. Если вы решите работать с исходными текстами, вам нужно будет применить к вашей libft те же правила, что и написанные выше в части «Общие инструкции».

• Управление вашим окном должно оставаться плавным: переключение на другое окно, сворачивание и т. Д.

• примеры даны с темой дельфинов, но вы можете использовать все, что захотите.

• Карта будет состоять из 3-х компонентных стен, предметов коллекционирования и свободного пространства.

• Цель игрока - собрать все предметы коллекционирования, представленные на карте, а затем убежать с минимальным движением.

• При каждом движении в оболочке должно отображаться текущее количество движений.

• Игрок должен уметь двигаться: вверх, вниз, влево, вправо.

• Вы будете использовать 2D-вид (сверху вниз или в профиль).

• Игра не обязательно должна быть в реальном времени.

• игрок не может двигаться в стены.

• Программа отображает изображение в окне и соблюдает следующие правила:

     ◦ Клавиши W, A, S и D будут использоваться для перемещения главного героя.
     ◦ Нажатие ESC должно закрыть окно и полностью выйти из программы.
     ◦ Щелчок по красному крестику на рамке окна должен закрыть окно и полностью выйти из программы.
     ◦ Настоятельно рекомендуется использовать изображения minilibX.

• Ваша программа должна принимать в качестве первого аргумента файл описания карты с расширением .ber.
     ◦ Карта должна состоять только из 5 возможных символов: 0 для пустого места, 1 для стены, C для коллекционного предмета, E для выхода из карты и P для начальной позиции игрока.
Это простая действительная карта:

1111111111111
10010000000C11000011111001
1P0011E0000011111111111111

     ◦ Карта должна быть закрыта / окружена стенами, в противном случае программа должна выдать ошибку.
     ◦ На карте должен быть хотя бы один выход, один предмет коллекционирования и одна стартовая позиция.
     ◦ Вам не нужно проверять, есть ли на карте действительный путь.
     ◦ Карта должна быть прямоугольной.
     ◦ У вас должна быть возможность анализировать любой вид карты, если он соответствует правилам карты.
     ◦ Еще одна минимальная карта .ber:

1111111111111111111111111111111111
1E0000000000000C00000C0000000000011010010100100000101001000000010101
10100100101010100010010000000101011P0000000C00C0000000000000000000C1
1111111111111111111111111111111111

     ◦ Если в файле обнаружена какая-либо неправильная конфигурация, программа должна завершиться должным образом и вернуть «Error\n» с последующим явным сообщением об ошибке по вашему выбору.

_____________________________________________________________________
Глава V.

Бонусная часть

Бонусы будут оцениваться только в том случае, если ваша обязательная часть ИДЕАЛЬНА.
Под СОВЕРШЕННЫМ мы, естественно, подразумеваем, что он должен быть полным, что он не может потерпеть неудачу, даже в случаях неприятных ошибок, таких как неправильное использование и т. Д.
Это означает, что если ваша обязательная часть не наберет ВСЕ баллы во время выставления оценок, ваши бонусы будут полностью ИГНОРИРОВАНЫ.

Вам разрешается использовать другие функции для завершения бонусной части, если их использование оправдано во время вашей оценки. Быть умным!.
Список бонусов:
• вражеские патрули, из-за которых игрок проигрывает в случае контакта.
• Есть некоторая спрайтовая анимация.
• Счетчик перемещений отображается непосредственно на экране вместо вывода в оболочку.

Позже вы сможете создавать лучшие игры, не теряя слишком много времени!